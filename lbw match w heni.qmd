---
title: "Match LBW with Heni's Data"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---
Should have 1669 tracts in WI in final cleaned DHS data

1409 CTs in 2010 from census 

1542 CTS in 2020 from census 

# To do: 
Need to fix total number of CTs using this file https://www2.census.gov/geo/docs/maps-data/data/rel2020/tract/tab20_tract20_tract10_natl.txt
and then reconcile any additional differences w Heni 


```{r, message = FALSE, warning = FALSE}
#heni's data: 

heni = haven::read_sas("P:/CH-Ranking/Research/model 2.0/WI vitality data/Heni/lbw_mort_wi_heni_updated_fips.sas7bdat")

#raw data 
#create a list of the files from your target directory
file_list <- list.files(path="P:/CH-Ranking/Research/model 2.0/WI vitality data/updated data")

#initiate a blank data frame, each iteration of the loop will append the data from the given file to this variable
lbw = data.frame()
dth = data.frame()
#had to specify columns to get rid of the total column
for (i in 1:length(file_list)){
  temp_file = file_list[i]
  if (grepl("lbw", temp_file, fixed = TRUE) == TRUE) {
  temp_data <- haven::read_sas(paste0("P:/CH-Ranking/Research/model 2.0/WI vitality data/updated data/", temp_file)) 
  temp_data$year = substr(as.numeric(gsub("\\D", "", temp_file)), 1, nchar(as.numeric(gsub("\\D", "", temp_file)))-1) 
  lbw <- rbind(lbw, temp_data) #for each iteration, bind the new data to the building dataset
  } else {
  temp_data <- haven::read_sas(paste0("P:/CH-Ranking/Research/model 2.0/WI vitality data/updated data/", temp_file)) 
  temp_data$year = substr(as.numeric(gsub("\\D", "", temp_file)), 1, nchar(as.numeric(gsub("\\D", "", temp_file)))-1) 
  dth <- rbind(dth, temp_data) #for each iteration, bind the new data to the building dataset
  }
}



library(dplyr)
totlbw = lbw %>% group_by(year, res_census_block) %>% 
  summarise(totalBirth = sum(totalBirth),
            totalLBW = sum(totalLBW))
sum(is.na(totlbw$totalBirth))

totdth = dth %>% group_by(year, res_census_block) %>% 
  mutate(sumDeath = sum(totalDeath))
totdth = totdth %>% 
  filter(!(age_group %in% c("75-79", "80-84", "85+"))) %>% 
  group_by(year, res_census_block) %>% 
           mutate(sumPremort = sum(totalDeath)) %>% 
  distinct(res_census_block, year, sumDeath, sumPremort)



```



# Missingness 

Each census tract does not contain data for each year. It is likely that the 2012-2018 data is built upon a different set of CTs than the 2019-2020 data. In order to calculate cumulative sums, it is helpful to create dummy rows for these missing year and census tract combinations. 

First I create dummy rows for ALL years, regardless of whether we expect each CT to be present for that year or not 

```{r, message = FALSE, warning = FALSE}
totlbw$year = as.numeric(totlbw$year)
totdth$year = as.numeric(totdth$year)

library(tidyr)
totlbw_c = totlbw %>% group_by(res_census_block) %>% complete(year = seq(2012, 2021, 1)) %>% 
  fill(totalBirth, totalLBW) %>% 
  mutate(totalBirth = replace_na(totalBirth, 0),
         totalLBW = replace_na(totalLBW, 0))



totdth_c = totdth %>% group_by(res_census_block) %>% complete(year = seq(2012, 2021, 1)) %>% 
  fill(sumDeath, sumPremort) %>% 
  mutate(sumDeath = replace_na(sumDeath, 0), 
         sumPremort = replace_na(sumPremort, 0))
  
```

There were `r nrow(totlbw_c) - nrow(totlbw)` census tract and year combinations that needed to be appended to the original LBW dataset, resulting from census tracts missing data for some years. 

There were `r nrow(totdth_c) - nrow(totdth)` census tract and year combinations that needed to be appended to the original DTH dataset, resulting from census tracts missing data for some years.   

There are more observations in the mortality dataset than in the LBW dataset. This makes sense since LBW is often more missing/more private. 

# Two special datasets 

Next, I create dummy rows for missing years between 2012-2018 separately from CTs that are missing from 2019-2021 since we expect the CTs available in 2012-2018 to be different from the CTs available in 2019-2021. 

```{r}
totlbw_c_1218 = totlbw %>% filter(year <2019) %>% 
  group_by(res_census_block) %>% complete(year = seq(2012, 2018, 1)) %>% 
  fill(totalBirth, totalLBW) %>% 
  mutate(totalBirth = replace_na(totalBirth, 0),
         totalLBW = replace_na(totalLBW, 0))

totlbw_c_1921 = totlbw %>% filter(year >=2019) %>% 
  group_by(res_census_block) %>% complete(year = seq(2019,2021, 1)) %>% 
  fill(totalBirth, totalLBW) %>% 
  mutate(totalBirth = replace_na(totalBirth, 0),
         totalLBW = replace_na(totalLBW, 0))

totlbw_c_sep = rbind(totlbw_c_1218, totlbw_c_1921)

totdth_c_1218 = totdth %>% filter(year<2019) %>% 
  group_by(res_census_block) %>% complete(year = seq(2012,2018, 1)) %>% 
  fill(sumDeath, sumPremort) %>% 
  mutate(sumDeath = replace_na(sumDeath, 0), 
         sumPremort = replace_na(sumPremort, 0))

totdth_c_1921 = totdth %>% filter(year>=2019) %>% 
  group_by(res_census_block) %>% complete(year = seq(2019, 2021, 1)) %>% 
  fill(sumDeath, sumPremort) %>% 
  mutate(sumDeath = replace_na(sumDeath, 0), 
         sumPremort = replace_na(sumPremort, 0))


totdth_c_sep = rbind(totdth_c_1218, totdth_c_1921)
```
When we add missing/dummy rows without creating two separate year groupings, there are a total of `r nrow(totdth_c)` rows of death data available for a total of `r length(unique(totdth_c$res_census_block))` unique CTs. Meanwhile, when we add missing/dummy rows separately for 2012-2018 and 2019-2021, there are a total of `r nrow(totdth_c_sep)` rows of death data available for a total of `r length(unique(totdth_c_sep$res_census_block))` unique CTs. Similar differences are seen in the birth datasets, as shown in the table below:   
```{r}

table = data.frame(type = c("Death", "Birth"), 
                   `N Unique CTs` = c(length(unique(totdth_c_sep$res_census_block)), 
                                      length(unique(totlbw_c_sep$res_census_block))),
                   `Separate total rows` = c(nrow(totdth_c_sep), nrow(totlbw_c_sep)), 
                   `Together total rows` = c(nrow(totdth_c), nrow(totlbw_c))
                   )


knitr::kable(table)                         
 


```

# Calculation of rolling sums for LBW 

I calculate rolling sums once using the dataset where missings were changed to zeroes separately for 2012-2018 and 2019-2021 and once using the dataset where missings where changed to zeroes for all years 2012-2021. I do this because when the rolling sums are calculated, CTs with data for only the 2012-2018 group or only the 2019-2021 group will end up with missing rolling sums.  
```{r, message = FALSE, warning = FALSE}


library(RcppRoll)
lbw_roll = totlbw_c_sep %>% arrange(year) %>% group_by(res_census_block) %>% 
  mutate(twoyearBirths = roll_sum(totalBirth, 2, fill = NA, align = "left"),
         threeyearBirths = roll_sum(totalBirth, 3, fill = NA, align = "left"),
         fiveyearBirths = roll_sum(totalBirth, 5, fill = NA, align = "left"),
         sevenyearBirths = roll_sum(totalBirth, 7, fill = NA, align = "left"),
         tenyearBirths = roll_sum(totalBirth, 10, fill = NA, align = "left"),
         twoyearLBW = roll_sum(totalLBW, 2, fill = NA, align = "left"),
         threeyearLBW = roll_sum(totalLBW, 3, fill = NA, align = "left"),
         fiveyearLBW = roll_sum(totalLBW, 5, fill = NA, align = "left"),
         sevenyearLBW = roll_sum(totalLBW, 7, fill = NA, align = "left"),
         tenyearLBW = roll_sum(totalLBW, 10, fill = NA, align = "left"))

lbw_roll$twoyearLBWrate = lbw_roll$twoyearLBW/lbw_roll$twoyearBirths
lbw_roll$threeyearLBWrate = lbw_roll$threeyearLBW/lbw_roll$threeyearBirths
lbw_roll$fiveyearLBWrate = lbw_roll$fiveyearLBW/lbw_roll$fiveyearBirths
lbw_roll$sevenyearLBWrate = lbw_roll$sevenyearLBW/lbw_roll$sevenyearBirths
lbw_roll$tenyearLBWrate = lbw_roll$tenyearLBW/lbw_roll$tenyearBirths
     



                               
lbw_roll_tog = totlbw_c %>% arrange(year) %>% group_by(res_census_block) %>% 
  mutate(twoyearBirths = roll_sum(totalBirth, 2, fill = NA, align = "left"),
         threeyearBirths = roll_sum(totalBirth, 3, fill = NA, align = "left"),
         fiveyearBirths = roll_sum(totalBirth, 5, fill = NA, align = "left"),
         sevenyearBirths = roll_sum(totalBirth, 7, fill = NA, align = "left"),
         tenyearBirths = roll_sum(totalBirth, 10, fill = NA, align = "left"),
         twoyearLBW = roll_sum(totalLBW, 2, fill = NA, align = "left"),
         threeyearLBW = roll_sum(totalLBW, 3, fill = NA, align = "left"),
         fiveyearLBW = roll_sum(totalLBW, 5, fill = NA, align = "left"),
         sevenyearLBW = roll_sum(totalLBW, 7, fill = NA, align = "left"),
         tenyearLBW = roll_sum(totalLBW, 10, fill = NA, align = "left"))

lbw_roll_tog$twoyearLBWrate = lbw_roll_tog$twoyearLBW/lbw_roll_tog$twoyearBirths
lbw_roll_tog$threeyearLBWrate = lbw_roll_tog$threeyearLBW/lbw_roll_tog$threeyearBirths
lbw_roll_tog$fiveyearLBWrate = lbw_roll_tog$fiveyearLBW/lbw_roll_tog$fiveyearBirths
lbw_roll_tog$sevenyearLBWrate = lbw_roll_tog$sevenyearLBW/lbw_roll_tog$sevenyearBirths
lbw_roll_tog$tenyearLBWrate = lbw_roll_tog$tenyearLBW/lbw_roll_tog$tenyearBirths       
```




# Calculate LBW rate by CT for each year and for each rolling year and compare to Heni 


```{r, message = FALSE, warning = FALSE}
lbw_rates = totlbw %>% group_by(res_census_block, year) %>% 
  summarize(lbwrate = totalLBW/totalBirth) #im not using the "_c" dataset because i want the "0" values to be NA when calculating 

lbw_roll[lbw_roll$totalBirth == 0 & lbw_roll$totalLBW != 0,] #this is a check to make sure there are no rows w impossible values 


```
Now compare my CT rates to Heni's CT rates  


```{r, message = FALSE, warning = FALSE}

mismatch = lbw_rates %>% filter(!res_census_block %in% heni$res_census_block)
unique(mismatch$res_census_block)

states = unique(substr(mismatch$res_census_block, 1,2))                                
        
```
There are many GEOIDs in my data that are not included in Heni's data (as shown above). Births from a total of `r length(states) + 1` states are included in the data. 

After including only the CTs that are in Heni's dataset, Heni and I have matching rates. Note that my data does not show any missings because of the way I have chosen to structure my dataset - i.e. there is no 2012 column if there is no 2012 rate.

This is a crude check of our rates 

```{r, message = FALSE, warning = FALSE}
lbwsub = lbw_rates %>% filter(res_census_block %in% heni$res_census_block)

lbw_rates %>% filter(!res_census_block %in% heni$res_census_block)
heni %>% filter(!res_census_block %in% lbw_rates$res_census_block)

summary(lbwsub$lbwrate[lbwsub$year == 2012])
summary(heni$LBW_rate_2012)     

summary(lbwsub$lbwrate[lbwsub$year == 2014])
summary(heni$LBW_rate_2014)    

summary(lbwsub$lbwrate[lbwsub$year == 2015])
summary(heni$LBW_rate_2015)    

summary(lbwsub$lbwrate[lbwsub$year == 2017])
summary(heni$LBW_rate_2017)    

summary(lbwsub$lbwrate[lbwsub$year == 2019])
summary(heni$LBW_rate_2019)   

summary(lbwsub$lbwrate[lbwsub$year == 2020])
summary(heni$LBW_rate_2020)    

summary(lbwsub$lbwrate[lbwsub$year == 2021])
summary(heni$LBW_rate_2021)    
```

Need to better understand how/why DHS collects this data..... 
Do these represent births of WI moms who may have been in another location at the time of birth? 
If so, maybe we still want to count them? Not sure 


Now a crude comparison of my rolling CT rates to Heni's rolling CT rates  
Note that it is only the rolling rates for which missings need to be replaced with 0. 

```{r, message = FALSE, warning = FALSE}
lbwsub_roll = lbw_roll %>% filter(res_census_block %in% heni$res_census_block)

summary(lbwsub_roll$threeyearLBW[lbwsub_roll$year == 2012]) # there are no NAs yet since 2012 is the first year - all three year sums exist 
summary(heni$threeyear_sumLBW_2012to14)     
sum(!is.na(heni$threeyear_sumLBW_2012to14))
length(lbwsub_roll$threeyearLBW[lbwsub_roll$year == 2012])

summary(lbwsub_roll$fiveyearLBWrate[lbwsub_roll$year == 2017 & !is.na(lbwsub_roll$fiveyearLBWrate)])
summary(lbwsub_roll$fiveyearLBWrate[lbwsub_roll$year == 2017])
summary(heni$fiveyear_LBWrate_2017to21)   
sum(!is.na(heni$fiveyear_LBWrate_2017to21))
length(lbwsub_roll$fiveyearLBWrate[lbwsub_roll$year == 2017])

temp = lbwsub_roll[is.na(lbwsub_roll$fiveyearLBWrate) & lbwsub_roll$year == 2017,] # this likely is a CT that has no 2021 data  
temp = lbwsub_roll %>% filter(res_census_block == "55025001102")
# indeed, this CT only has data for 2012 through 2018 


summary(lbwsub_roll$threeyearLBWrate[lbwsub_roll$year == 2017])
summary(heni$threeyear_LBWrate_2017to19) 
sum(!is.na(heni$threeyear_LBWrate_2017to19))
length(lbwsub_roll$threeyearLBWrate[lbwsub_roll$year == 2017])


temp = lbwsub_roll[lbwsub_roll$year == 2017 & lbwsub_roll$threeyearLBWrate >0.3,]
temp = lbwsub_roll[lbwsub_roll$res_census_block == "55063000402",]
#bizarre that the most extreme five year rate in my data happens to have the same three year rate as the maximum in heni's data........ almost makes me wonder if something was mislabeled 
```
Some evidence of mishandling of missings by either me or Heni, hard to say for sure; need to do more digging - either way, any potential differences are unsubstantial. 
Would help me to understand what the rolling sums will be used for. 

The way my rolling sums are calculated, if a county does not have data for each year in the sequence of years (ie 2012 - 2019 for 7 year sum), the sum will not be calculated. So, when the missings are switched to zeroes by group, there will be more missing rolling sums since there may be CTs which do not have data for one year grouping or another.  

My data does not have the same number of unique census tracts as Heni's. However, we do have the same number of census tracts with lbwrates..... so it seems that maybe Heni's data draws from the CT relational files to get exactly the number of possible CTs in WI from 2010 through 2020. 


```{r}
lbwhow = merge(lbwsub, lbwsub_roll, by= c("res_census_block", "year"), all = TRUE)
write.csv(lbwhow, "P:/CH-Ranking/Research/model 2.0/WI vitality data/Hannah/lbw_how.csv", row.names = FALSE)

length(unique(heni$res_census_block))
length(unique(lbwhow$res_census_block))


```
















Questions for the group: 
what are the rolling averages for? I understand the five year ones (For use w ACS data) but I do not yet understand the need for two and three year rolling averages 

How does DHS decide which births get counted? There are births from 18 different states in the data from DHS 

